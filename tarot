<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>魂の誓願と星詠みの祝福 (v2)</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&family=Shippori+Mincho:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', 'Shippori Mincho', serif;
            background-color: #0b132b; /* ベースの背景色 */
            color: #e0e0e0;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            padding: 1rem;
            box-sizing: border-box;
            overflow: hidden; /* 星がはみ出ないように */
            position: relative; /* 星の配置基準 */
        }
        .starry-background .star { /* 星のアニメーション */
            position: absolute;
            background-color: white;
            border-radius: 50%;
            animation: twinkle 5s infinite ease-in-out;
            opacity: 0; /* 初期状態は非表示 */
        }
        @keyframes twinkle {
            0%, 100% { opacity: 0.2; }
            50% { opacity: 0.8; }
        }
        .container {
            background-color: rgba(11, 19, 43, 0.92); /* 背景の透明度を少し上げる */
            backdrop-filter: blur(18px); /* ブラーを強く */
            border-radius: 1.25rem;
            padding: 2.5rem;
            box-shadow: 0 15px 35px rgba(0,0,0,0.6), 0 0 120px rgba(86, 128, 233, 0.3) inset; /* 影を強調 */
            width: 100%;
            max-width: 650px; /* コンテナ幅を少し広げる */
            text-align: center;
            border: 1px solid rgba(86, 128, 233, 0.4);
            position: relative; /* z-indexのため */
            z-index: 1;
        }
        .title-font {
            font-family: 'Shippori Mincho', serif;
        }
        .button-sacred {
            background: linear-gradient(135deg, #5680e9, #84ceeb);
            color: white;
            padding: 0.9rem 2rem;
            border-radius: 0.85rem;
            font-weight: bold;
            transition: all 0.35s ease;
            border: none;
            cursor: pointer;
            box-shadow: 0 6px 18px rgba(86, 128, 233, 0.35), 0 2px 6px rgba(0,0,0,0.25);
            display: inline-block;
        }
        .button-sacred:hover {
            background: linear-gradient(135deg, #4a6fcf, #70b9d6);
            transform: translateY(-4px) scale(1.04);
            box-shadow: 0 10px 25px rgba(86, 128, 233, 0.45), 0 4px 8px rgba(0,0,0,0.3);
        }
        .button-copy, .button-clear-record { /* コピーボタン、記録削除ボタン */
            background-color: rgba(86, 128, 233, 0.2);
            color: #a6c0fe;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-size: 0.8rem;
            font-weight: normal;
            transition: background-color 0.3s, color 0.3s;
            border: 1px solid rgba(86, 128, 233, 0.4);
            margin-top: 0.5rem;
        }
        .button-copy:hover, .button-clear-record:hover {
            background-color: rgba(86, 128, 233, 0.4);
            color: white;
        }
        .input-field, .textarea-field {
            background-color: rgba(28, 37, 65, 0.85);
            border: 1px solid #5a76a8;
            color: #e0e0e0;
            border-radius: 0.6rem;
            padding: 0.9rem;
            width: 100%;
            box-sizing: border-box;
            transition: border-color 0.3s, box-shadow 0.3s;
            margin-bottom: 1rem;
        }
        .input-field:focus, .textarea-field:focus {
            outline: none;
            border-color: #84ceeb;
            box-shadow: 0 0 0 3px rgba(132, 206, 235, 0.35);
        }
        .label-text {
            display: block;
            margin-bottom: 0.75rem;
            text-align: left;
            color: #c0c0c0;
            font-weight: 500;
        }
        .message-box, .result-box, .record-box { /* 記録表示用のクラス追加 */
            background-color: rgba(28, 37, 65, 0.8); /* 透明度調整 */
            border-left: 6px solid #84ceeb;
            padding: 2rem;
            border-radius: 0.85rem;
            margin-top: 1.5rem; /* record-boxはマージン小さめ */
            animation: fadeInContent 1s ease-out forwards;
            text-align: left;
            box-shadow: 0 5px 20px rgba(0,0,0,0.3);
        }
        .gofu-box {
            background: linear-gradient(145deg, rgba(86, 128, 233, 0.2), rgba(132, 206, 235, 0.3)); /* 背景を少し濃く */
            border: 2px solid rgba(132, 206, 235, 0.6); /* 枠線を太く、濃く */
            padding: 2rem; /* パディングを増やす */
            border-radius: 0.85rem; /* 角丸を他と合わせる */
            margin-top: 1.5rem;
            text-align: center;
            font-family: 'Shippori Mincho', serif;
            font-size: 1.25rem; /* 少し大きく */
            color: #f0f8ff;
            box-shadow: 0 0 20px rgba(132, 206, 235, 0.4), 0 0 5px rgba(255,255,255,0.3) inset; /* 内側にも微かな光 */
            position: relative; /* コピーボタンの位置基準 */
        }
        .gofu-text { /* 護符のテキスト専用 */
            margin-bottom: 1rem; /* コピーボタンとの間隔 */
        }
        @keyframes fadeInContent {
            from { opacity: 0; transform: translateY(25px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .hidden {
            display: none;
        }
        .error-message {
            color: #fda4af;
            font-size: 0.9rem;
            margin-top: 0.5rem;
            text-align: left;
        }
        .section-title {
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
            color: #a6c0fe;
            font-family: 'Shippori Mincho', serif;
        }
    </style>
</head>
<body class="starry-background">
    <div class="container">
        <header class="mb-8">
            <h1 class="text-3xl md:text-4xl font-bold title-font text-sky-300">魂の誓願と星詠みの祝福</h1>
            <p class="text-sm text-slate-400 mt-1">~ Ver. 2.0 ~</p>
        </header>

        <section id="previousRecordSection" class="hidden mb-6">
            <h3 class="text-lg title-font text-sky-400 mb-2">前回の誓いの記録</h3>
            <div id="recordDisplay" class="record-box text-sm">
                </div>
            <button id="clearRecordButton" class="button-clear-record mt-2">この記録を水鏡から消す</button>
        </section>

        <section id="step1Section">
            <h2 class="section-title">星読みの森へようこそ</h2>
            <p class="mb-6 text-slate-300">私はタロットに宿る精霊、ワンと申します。<br>あなたの魂の願いを、この揺らぎの水鏡に映してみませんか？</p>
            
            <label for="nickname" class="label-text">あなたのニックネームを教えていただけますか？</label>
            <input type="text" id="nickname" class="input-field" placeholder="例：さくら">
            <p id="nicknameError" class="error-message hidden">ニックネームを教えてくださいね。</p>

            <label for="soulWish" class="label-text mt-4">あなたの魂からの純粋な願いをお聞かせください。</label>
            <textarea id="soulWish" class="textarea-field h-24" placeholder="例：〇〇さんと心からの愛で結ばれますように…"></textarea>
            <p id="soulWishError" class="error-message hidden">あなたの魂の願いを教えてくださいね。</p>

            <button id="goToStep2" class="button-sacred mt-6">愛の行動を誓う</button>
        </section>

        <section id="step2Section" class="hidden">
            <h2 id="step2Title" class="section-title">愛の行動宣言</h2>
            <p id="step2Greeting" class="mb-6 text-slate-300"></p>
            <p class="mb-4 text-slate-300">その願いを成就させるために、あなたが日々実践する「愛の行動」を３つまで教えてくださいね。<br>小さなことでも大丈夫、あなたの心が示す愛の形を信じて。</p>

            <div>
                <label for="action1" class="label-text">愛の行動 1：</label>
                <input type="text" id="action1" class="input-field" placeholder="例：毎日、彼の幸せを心から祈ります。">
                <p id="action1Error" class="error-message hidden">一つ目の愛の行動を教えてくださいね。</p>
            </div>
            <div class="mt-3">
                <label for="action2" class="label-text">愛の行動 2：(任意)</label>
                <input type="text" id="action2" class="input-field" placeholder="例：自分自身を愛で満たし、笑顔で過ごします。">
            </div>
            <div class="mt-3">
                <label for="action3" class="label-text">愛の行動 3：(任意)</label>
                <input type="text" id="action3" class="input-field" placeholder="例：勇気を出して、感謝の言葉を伝えます。">
            </div>
            <button id="goToStep3" class="button-sacred mt-6">星詠みの祝福を授かる</button>
        </section>

        <section id="step3Section" class="hidden">
            <h2 class="section-title">星詠みの祝福と魂の護符</h2>
            <div id="resultBox" class="result-box">
                </div>
            <p id="buttonDescription" class="text-slate-300 text-sm mt-8 mb-3 text-center hidden">
                今回の星詠みはここまでとなります。<br>再び魂の願いを灯し、新たな祝福を受け取りたい方は、下のボタンを押してくださいね。
            </p>
            <button id="returnToStart" class="button-sacred hidden">もう一度、魂の願いを灯す</button>
        </section>
    </div>

    <footer class="text-center text-xs text-slate-500 mt-8 pb-4">
        <p>&copy; 神式七術 All rights reserved.</p>
        <p class="mt-1">このツールはあなたの内なる力を引き出すためのものであり、結果を保証するものではありません。</p>
    </footer>

    <script>
        // DOM Elements
        const bodyElement = document.body;
        const previousRecordSection = document.getElementById('previousRecordSection');
        const recordDisplay = document.getElementById('recordDisplay');
        const clearRecordButton = document.getElementById('clearRecordButton');

        const step1Section = document.getElementById('step1Section');
        const nicknameInput = document.getElementById('nickname');
        const soulWishInput = document.getElementById('soulWish');
        const nicknameError = document.getElementById('nicknameError');
        const soulWishError = document.getElementById('soulWishError');
        const goToStep2Button = document.getElementById('goToStep2');

        const step2Section = document.getElementById('step2Section');
        const step2Title = document.getElementById('step2Title');
        const step2Greeting = document.getElementById('step2Greeting');
        const action1Input = document.getElementById('action1');
        const action2Input = document.getElementById('action2');
        const action3Input = document.getElementById('action3');
        const action1Error = document.getElementById('action1Error');
        const goToStep3Button = document.getElementById('goToStep3');

        const step3Section = document.getElementById('step3Section');
        const resultBox = document.getElementById('resultBox');
        const buttonDescription = document.getElementById('buttonDescription');
        const returnToStartButton = document.getElementById('returnToStart');

        // User Data
        let userNickname = "";
        let soulWish = "";
        let actions = [];

        // --- Starry Background ---
        function createStars() {
            const numStars = 100; // 星の数
            for (let i = 0; i < numStars; i++) {
                let star = document.createElement('div');
                star.classList.add('star');
                let size = Math.random() * 2 + 1; // 星のサイズ (1px to 3px)
                star.style.width = `${size}px`;
                star.style.height = `${size}px`;
                star.style.top = `${Math.random() * 100}%`;
                star.style.left = `${Math.random() * 100}%`;
                // アニメーションの遅延をランダムに設定
                star.style.animationDelay = `${Math.random() * 5}s`;
                star.style.animationDuration = `${Math.random() * 3 + 4}s`; // 4-7秒の間に点滅
                bodyElement.appendChild(star);
            }
        }
        createStars(); // 星空を生成

        // Star Reading Messages (Moon Phases & Stars) - さらに追加
        const starReadings = [
            (name) => `今宵は新月。新たな始まりのエネルギーが、${name}さんの誓願を力強く後押ししています。蒔かれた種が芽吹くように、あなたの愛の行動が願いを育むでしょう。`,
            (name) => `三日月が空に優しい光を灯していますね。${name}さんの願いは、この月のように日々満ちていくことでしょう。焦らず、一歩ずつ愛を育んでください。`,
            (name) => `上弦の月が、決意と行動の力を象徴しています。${name}さんの「愛の行動宣言」は、この月の力強いサポートを受け、願いの成就へと進むでしょう。`,
            (name) => `満月が、成就と感謝のエネルギーで世界を照らしています。${name}さんの純粋な願いと愛の行動が、この満月の光のように豊かに実を結びますように。`,
            (name) => `下弦の月は、内省と手放しの時。${name}さん、願いを妨げるかもしれない小さな不安は、この月に預けて。あなたの愛は、より軽やかに輝きを増すでしょう。`,
            (name) => `北天に輝く「導きの星」が、${name}さんの進むべき道を明るく照らしています。迷うことなく、その星を目指して愛の行動を続けてくださいね。`,
            (name) => `七色の光を放つ「希望の星団」が、${name}さんの願いに祝福のシャワーを降らせています。あなたの未来は、虹のように美しく輝いていますよ。`,
            (name) => `「絆の双子星」が、今宵はひときわ強く結びつきを強めています。${name}さんの愛の行動は、大切な人との魂の絆をさらに深めることでしょう。`,
            (name) => `暁の明星が、夜明け前の空に強く輝いています。${name}さんの願いが叶う日はもうすぐそこ。希望を胸に、最後の一歩まで愛を貫いてください。`,
            (name) => `天の川が、無数の星々の願いを乗せて流れています。${name}さんの誓願もまた、この大いなる流れの一部。宇宙全体があなたを応援していますよ。`,
            (name) => `「愛の女神の守護星」が、${name}さんの頭上で優しく微笑んでいます。あなたの愛は守られ、育まれ、必ずや美しい花を咲かせるでしょう。`,
            (name) => `流星群が、今宵の空を駆け巡っています。一つ一つの光が、${name}さんの願いを天に届ける使者のよう。心を込めて、もう一度願いを託してみませんか。`
        ];

        // Gofu (Amulet Words) - さらに追加
        const gofuWords = [
            "私は愛と共に進み、願いを現実にする力を持つ",
            "私の魂は輝き、宇宙の無限の豊かさと繋がっている",
            "日々の愛の行動が、私の願いを確実なものへと導く",
            "私は愛される価値があり、素晴らしい愛を引き寄せる",
            "宇宙は私の味方。全ての出来事は願いの成就へと繋がる",
            "私の心は愛と感謝で満ち溢れ、奇跡を呼び込む",
            "信じる力が、私の未来を美しく創造する",
            "私はありのままで完璧。愛と喜びが私を包む",
            "私の愛は無限であり、与えるほどに豊かになる",
            "全ての経験は魂の成長。私は日々進化し続ける",
            "私の願いは宇宙の願いと調和し、最善の形で実現する",
            "私は光そのもの。私の存在が周りを明るく照らす"
        ];
        
        // --- Local Storage Functions ---
        function saveRecord(record) {
            localStorage.setItem('latestBlessingRecord', JSON.stringify(record));
        }

        function loadRecord() {
            const recordString = localStorage.getItem('latestBlessingRecord');
            if (recordString) {
                return JSON.parse(recordString);
            }
            return null;
        }

        function displayPreviousRecord() {
            const record = loadRecord();
            if (record) {
                recordDisplay.innerHTML = `
                    <p class="text-slate-400 mb-1"><strong>ニックネーム：</strong> ${record.nickname}</p>
                    <p class="text-slate-400 mb-1"><strong>魂の願い：</strong> ${record.soulWish}</p>
                    <p class="text-slate-400 mb-1"><strong>愛の行動宣言：</strong></p>
                    <ul class="list-disc list-inside ml-4 mb-2 text-slate-400">
                        ${record.actions.map(action => `<li>${action}</li>`).join('')}
                    </ul>
                    <p class="text-slate-400 mb-1"><strong>星詠みの祝福：</strong> ${record.starReadingSnippet || record.starReading.substring(0,50) + "..."}</p> <p class="text-slate-400"><strong>魂の護符：</strong>「 ${record.gofuWord} 」</p>
                `;
                previousRecordSection.classList.remove('hidden');
            } else {
                previousRecordSection.classList.add('hidden');
            }
        }
        
        clearRecordButton.addEventListener('click', () => {
            localStorage.removeItem('latestBlessingRecord');
            previousRecordSection.classList.add('hidden');
            // Optional: Add a confirmation message
             const confirmation = document.createElement('p');
             confirmation.textContent = "記録を水鏡からそっと消しました。";
             confirmation.className = "text-sky-300 text-sm mt-1";
             clearRecordButton.insertAdjacentElement('afterend', confirmation);
             setTimeout(() => confirmation.remove(), 3000);
        });


        // --- Event Listeners ---
        goToStep2Button.addEventListener('click', () => {
            userNickname = nicknameInput.value.trim();
            soulWish = soulWishInput.value.trim();
            let valid = true;
            if (!userNickname) {
                nicknameError.classList.remove('hidden');
                valid = false;
            } else {
                nicknameError.classList.add('hidden');
            }
            if (!soulWish) {
                soulWishError.classList.remove('hidden');
                valid = false;
            } else {
                soulWishError.classList.add('hidden');
            }

            if (valid) {
                step1Section.classList.add('hidden');
                previousRecordSection.classList.add('hidden'); // Hide previous record when starting new
                step2Section.classList.remove('hidden');
                step2Title.textContent = `${userNickname}さんの愛の行動宣言`;
                step2Greeting.innerHTML = `その魂の願い、確かに受け止めました。あなたの想いは、夜空で最も明るく輝く星のように、尊い光を放っていますよ。<br>その光をさらに強め、現実へと手繰り寄せるために、あなたの「愛の行動」を教えてくださいね。`;
            }
        });

        goToStep3Button.addEventListener('click', () => {
            const action1 = action1Input.value.trim();
            const action2 = action2Input.value.trim();
            const action3 = action3Input.value.trim();
            actions = []; 

            if (!action1) {
                action1Error.classList.remove('hidden');
                return;
            } else {
                action1Error.classList.add('hidden');
                actions.push(action1);
            }
            if (action2) actions.push(action2);
            if (action3) actions.push(action3);
            
            step2Section.classList.add('hidden');
            step3Section.classList.remove('hidden');
            displayResults();
        });
        
        returnToStartButton.addEventListener('click', () => {
            step3Section.classList.add('hidden');
            step1Section.classList.remove('hidden');
            
            nicknameInput.value = "";
            soulWishInput.value = "";
            action1Input.value = "";
            action2Input.value = "";
            action3Input.value = "";
            actions = [];
            
            returnToStartButton.classList.add('hidden');
            buttonDescription.classList.add('hidden');
            displayPreviousRecord(); // Show previous record again on returning to start
        });

        // --- Main Functions ---
        function displayResults() {
            const randomReadingFull = starReadings[Math.floor(Math.random() * starReadings.length)](userNickname);
            const randomGofu = gofuWords[Math.floor(Math.random() * gofuWords.length)];

            let actionsHtml = "<ul>";
            actions.forEach(action => {
                actionsHtml += `<li class="mb-1 ml-4 list-disc list-inside text-slate-300">${action}</li>`;
            });
            actionsHtml += "</ul>";

            const gofuTextId = "gofuTextToCopy"; // ID for the gofu text P tag

            resultBox.innerHTML = `
                <p class="text-lg text-amber-300 mb-3 title-font">${userNickname}さんの魂の誓願、星々に届きました…</p>
                <p class="text-slate-300 mb-2"><strong>あなたの魂の願い：</strong><br>${soulWish}</p>
                <p class="text-slate-300 mb-4"><strong>あなたの愛の行動宣言：</strong>${actionsHtml}</p>
                
                <hr class="border-slate-600 my-6">

                <p class="text-lg text-sky-400 mb-3 title-font">星詠みの祝福</p>
                <p class="text-slate-200 mb-6 leading-relaxed">${randomReadingFull}</p>

                <p class="text-lg text-emerald-400 mb-3 title-font">魂の護符</p>
                <div class="gofu-box">
                    <p class="gofu-text" id="${gofuTextId}">「 ${randomGofu} 」</p>
                    <button class="button-copy" id="copyGofuButton">この言霊を心に刻む (コピー)</button>
                    <p id="copyFeedback" class="text-xs text-sky-300 mt-2 hidden">心に刻みました！</p>
                </div>
                <p class="text-slate-400 mt-3 text-sm text-center">この言霊を、朝夕に心で唱え、星の守護を感じてくださいね。</p>
                
                <hr class="border-slate-600 my-6">

                <p class="text-slate-400 text-sm leading-relaxed mt-6">
                    ${userNickname}さん、この星詠みと言霊の護符は、あなたの内なる力を引き出し、願いへの道を照らすための、星々のささやきです。
                    魔法のように直接願いを叶えるものではありませんが、あなたの純粋な想いと愛に満ちた行動が、きっと素晴らしい未来を手繰り寄せるでしょう。
                    この森は、いつもあなたの幸せを心から願っていますよ。
                </p>
            `;
            
            buttonDescription.classList.remove('hidden');
            returnToStartButton.classList.remove('hidden');

            // Add event listener for the copy button
            document.getElementById('copyGofuButton').addEventListener('click', () => {
                const gofuText = document.getElementById(gofuTextId).innerText;
                navigator.clipboard.writeText(gofuText).then(() => {
                    const feedback = document.getElementById('copyFeedback');
                    feedback.classList.remove('hidden');
                    setTimeout(() => feedback.classList.add('hidden'), 2000);
                }).catch(err => {
                    console.error('コピーに失敗しました: ', err);
                    // Optionally, provide fallback for older browsers or inform user
                });
            });

            // Save the current record
            const currentRecord = {
                nickname: userNickname,
                soulWish: soulWish,
                actions: actions,
                starReading: randomReadingFull, // Save full reading
                starReadingSnippet: randomReadingFull.substring(0,70) + "...", // Snippet for display
                gofuWord: randomGofu,
                timestamp: new Date().toLocaleString('ja-JP')
            };
            saveRecord(currentRecord);
        }

        // --- Initial Setup ---
        window.addEventListener('DOMContentLoaded', () => {
            displayPreviousRecord(); // Load and display previous record on page load
        });
    </script>
</body>
</html>
